{"version":3,"sources":["redux/actions/users.js","pages/Profile.js","redux/actions/auth.js"],"names":["getUsers","dispatch","payload","type","GET_USERS","updateUser","a","fetch","method","headers","body","JSON","stringify","UPDATE_USER","updateAuth","console","error","message","Profile","useDispatch","user","useSelector","state","auth","useState","gender","setGender","role","setRole","mail","setMail","className","name","defaultValue","onChange","e","target","value","layout","onClick","loadSuccess","LOGIN_SUCCESS","loadFail","LOGIN_FAIL","UPDATE_AUTH"],"mappings":"6PAQaA,EAAW,SAACC,EAAUC,GAC/BD,EAAS,CAAEE,KAAMC,IAAWF,aAGnBG,EAAU,uCAAG,WAAOJ,EAAUC,GAAjB,SAAAI,EAAA,+EAEKC,MAAM,8BAA+B,CACxDC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUV,KAPP,cASlBD,EAAS,CAAEE,KAAMU,IAAaX,YAC9BY,YAAWb,EAAUC,GAVH,gDAYlBa,QAAQC,MAAM,KAAMC,SAZF,yDAAH,yD,mICNR,SAASC,IACpB,IAAMjB,EAAWkB,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QAFf,EAGFI,mBAASJ,EAAKK,QAAU,IAHtB,mBAGvBA,EAHuB,KAGfC,EAHe,OAINF,mBAASJ,EAAKO,MAAQ,IAJhB,mBAIvBA,EAJuB,KAIjBC,EAJiB,OAKNJ,mBAASJ,EAAKS,MAAQ,IALhB,mBAKvBA,EALuB,KAKjBC,EALiB,KAO9B,OACI,kBAAC,OAAD,CAAMC,UAAU,cACZ,yBAAKA,UAAU,wDACX,uBAAGA,UAAU,sBAAb,WAEA,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,cAAb,QAA+B,0BAAMA,UAAU,kBAAkBX,EAAKY,QAG1E,yBAAKD,UAAU,iBACX,uBAAGA,UAAU,cAAb,SACA,2BAAOA,UAAU,iEACbE,aAAcb,EAAKO,KACnBO,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOC,WAIxC,yBAAKN,UAAU,iBACX,uBAAGA,UAAU,cAAb,WACA,2BAAOA,UAAU,iEACbE,aAAcb,EAAKK,OACnBS,SAAU,SAAAC,GAAC,OAAIT,EAAUS,EAAEC,OAAOC,WAI1C,yBAAKN,UAAU,iBACX,uBAAGA,UAAU,cAAb,SACA,2BAAOA,UAAU,kEACbE,aAAcb,EAAKS,KACnBK,SAAU,SAAAC,GAAC,OAAIL,EAAQK,EAAEC,OAAOC,WAIxC,yBAAKN,UAAU,oBACX,kBAAC,SAAD,CAAQO,OAAO,UAAUP,UAAU,gCAC/BQ,QAAS,kBAAMlC,YAAWJ,EAAU,CAAE+B,KAAMZ,EAAKY,KAAML,OAAMF,SAAQI,WADzE,a,gCC/CpB,iHAOaW,EAAc,SAACvC,EAAUmB,GAClCnB,EAAS,CAAEE,KAAMsC,IAAevC,QAASkB,KAGhCsB,EAAW,SAACzC,GACrBA,EAAS,CAAEE,KAAMwC,OAGR7B,EAAa,SAACb,EAAUC,GACjCD,EAAS,CAAEE,KAAMyC,IAAa1C","file":"static/js/12.d3301c14.chunk.js","sourcesContent":["import { CREATE_USER, GET_USERS, UPDATE_USER } from './types'\nimport { updateAuth } from './auth'\n\n\nexport const addUser = (dispatch, payload) => {\n    dispatch({ type: CREATE_USER, payload })\n}\n\nexport const getUsers = (dispatch, payload) => {\n    dispatch({ type: GET_USERS, payload })\n}\n\nexport const updateUser = async (dispatch, payload) => {\n    try {\n        const response = await fetch(\"http://localhost:5000/users\", {\n            method: 'PUT',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(payload)\n        })\n        dispatch({ type: UPDATE_USER, payload })\n        updateAuth(dispatch, payload);\n    } catch (error) {\n        console.error(error.message);\n    }\n\n}","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Card, Button } from '@windmill/react-ui'\nimport { updateUser } from '../redux/actions/users'\nimport { useDispatch } from 'react-redux'\n\nexport default function Profile() {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.auth.user);\n    const [gender, setGender] = useState(user.gender || \"\");\n    const [role, setRole] = useState(user.role || \"\");\n    const [mail, setMail] = useState(user.mail || \"\");\n\n    return (\n        <Card className=\"w-1/2 m-20\">\n            <div className=\"m-10   items-center font-concert dark:text-green-100\">\n                <p className=\"underline text-4xl\">Profile</p>\n\n                <div className=\"flex flex-row\">\n                    <p className=\" text-4xl \">User:<span className=\"ml-5 underline\">{user.name}</span></p>\n                </div>\n\n                <div className=\"flex flex-row\">\n                    <p className=\" text-4xl \">Role:</p>\n                    <input className=\"ml-5 pl-4 text-4xl mt-1 h-12 w-1/4 rounded-lg dark:bg-gray-600\"\n                        defaultValue={user.role}\n                        onChange={e => setRole(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"flex flex-row\">\n                    <p className=\" text-4xl \">Gender:</p>\n                    <input className=\"rounded-lg ml-5 pl-4 text-4xl mt-1 h-12 w-1/4 dark:bg-gray-600\"\n                        defaultValue={user.gender}\n                        onChange={e => setGender(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"flex flex-row\">\n                    <p className=\" text-4xl \">Mail:</p>\n                    <input className=\"rounded-lg ml-5 pl-4 text-4xl mt-1 h-12 w-full dark:bg-gray-600\"\n                        defaultValue={user.mail}\n                        onChange={e => setMail(e.target.value)}\n                    />\n\n                </div>\n                <div className=\"flex justify-end\">\n                    <Button layout=\"outline\" className=\"font-semibold text-2xl mt-10 \"\n                        onClick={() => updateUser(dispatch, { name: user.name, role, gender, mail })}\n                    >Save</Button>\n                </div>\n            </div >\n        </Card>\n\n\n    )\n}\n","import {\n    LOGIN_FAIL, LOGIN_SUCCESS, UPDATE_AUTH\n} from './types';\n\n//Check token  && load user\n\n\nexport const loadSuccess = (dispatch, user) => {\n    dispatch({ type: LOGIN_SUCCESS, payload: user });\n}\n\nexport const loadFail = (dispatch) => {\n    dispatch({ type: LOGIN_FAIL });\n}\n\nexport const updateAuth = (dispatch, payload) => {\n    dispatch({ type: UPDATE_AUTH, payload });\n}\n"],"sourceRoot":""}